// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tls.api.Repositories;

#nullable disable

namespace tls.api.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20221007233530_SeeProductTables")]
    partial class SeeProductTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("tls.api.OrderProducts.OrderProductEntity", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("tls.api.Orders.OrderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("tls.api.ProductReferences.ProductReferenceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("ProductReferences");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            ImageUrl = "https://tlsfilestorage.blob.core.windows.net/assets/lemon.svg",
                            Name = "Lemonade"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            ImageUrl = "https://tlsfilestorage.blob.core.windows.net/assets/lemon.svg",
                            Name = "Pink Lemonade"
                        });
                });

            modelBuilder.Entity("tls.api.Products.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("SizeValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductReferenceId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24625f9e-0e4a-49c7-835c-fd54d4e07971"),
                            Price = 1.0,
                            ProductReferenceId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            SizeName = "Regular",
                            SizeValue = 1
                        },
                        new
                        {
                            Id = new Guid("c9bf56b2-7154-478d-8cf2-cb9d11de7694"),
                            Price = 1.5,
                            ProductReferenceId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            SizeName = "Large",
                            SizeValue = 2
                        },
                        new
                        {
                            Id = new Guid("2332aa04-9621-40e5-b383-4c0763f486ed"),
                            Price = 1.0,
                            ProductReferenceId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            SizeName = "Regular",
                            SizeValue = 1
                        },
                        new
                        {
                            Id = new Guid("d31373c2-902e-441d-9d9f-c0fb987f929d"),
                            Price = 1.5,
                            ProductReferenceId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            SizeName = "Large",
                            SizeValue = 2
                        });
                });

            modelBuilder.Entity("tls.api.OrderProducts.OrderProductEntity", b =>
                {
                    b.HasOne("tls.api.Orders.OrderEntity", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tls.api.Products.ProductEntity", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("tls.api.Products.ProductEntity", b =>
                {
                    b.HasOne("tls.api.ProductReferences.ProductReferenceEntity", "ProductReference")
                        .WithMany()
                        .HasForeignKey("ProductReferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductReference");
                });

            modelBuilder.Entity("tls.api.Orders.OrderEntity", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("tls.api.Products.ProductEntity", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
